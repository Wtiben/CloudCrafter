name: Build and Push Docker Images

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: "cloudcrafter-oss"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - name: agent
            context: ./backend/
            dockerfile: ./backend/src/CloudCrafter.Agent.Console/Dockerfile
          - name: backend
            context: ./backend/
            dockerfile: ./backend/src/CloudCrafter.Web/Dockerfile
          - name: worker
            context: ./backend/
            dockerfile: ./backend/src/CloudCrafter.Worker.Console/Dockerfile
          - name: frontend
            context: ./frontend/
            dockerfile: ./frontend/apps/web/Dockerfile
            build_args: CLOUDCRAFTER_AXIOS_BACKEND_BASEURL=http://dummy
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/cloudcrafter-${{ matrix.name }}
          tags: |
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ matrix.build_args }}