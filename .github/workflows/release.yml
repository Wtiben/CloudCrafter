name: Build and Push Docker Images

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: "cloudcrafter-oss"

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo "matrix={
            \"image\": [
              {
                \"name\": \"agent\",
                \"context\": \"./backend/\",
                \"dockerfile\": \"./backend/src/CloudCrafter.Agent.Console/Dockerfile\",
                \"build_args\": \"\"
              },
              {
                \"name\": \"backend\",
                \"context\": \"./backend/\",
                \"dockerfile\": \"./backend/src/CloudCrafter.Web/Dockerfile\",
                \"build_args\": \"\"
              },
              {
                \"name\": \"worker\",
                \"context\": \"./backend/\",
                \"dockerfile\": \"./backend/src/CloudCrafter.Worker.Console/Dockerfile\",
                \"build_args\": \"\"
              },
              {
                \"name\": \"frontend\",
                \"context\": \"./frontend/\",
                \"dockerfile\": \"./frontend/apps/web/Dockerfile\",
                \"build_args\": \"CLOUDCRAFTER_AXIOS_BACKEND_BASEURL=http://dummy\"
              }
            ],
            \"platform\": [\"linux/amd64\", \"linux/arm64\"]
          }" >> $GITHUB_OUTPUT

  build-and-push:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix: ${{fromJSON(needs.prepare-matrix.outputs.matrix)}}
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/cloudcrafter-${{ matrix.image.name }}
          tags: |
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.dockerfile }}
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ matrix.image.build_args }}