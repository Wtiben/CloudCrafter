name: Validate Website

on:
  push:
    branches: [ "main" ]
    paths:
      - 'frontend/apps/site/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'frontend/apps/site/**'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: "cloudcrafter-oss"

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-workspace.yaml'
      - name: Install dependencies
        run: pnpm install
      - name: Run lint
        run: pnpm run format-and-lint

  build:
    needs: [lint]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        platform: [linux/arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        if: github.ref != 'refs/heads/main'
        uses: docker/login-action@v2
        with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push CloudCrafter Worker Docker image
        uses: docker/build-push-action@v4
        with:
            context: ./frontend/
            file: ./frontend/apps/site/Dockerfile
            push:  ${{ github.ref != 'refs/heads/main' }}
            platforms: ${{ matrix.platform }}
            tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/cloudcrafter-site:latest

  notify:
    needs: [build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Notify Plane
        run: ${{ secrets.PLANE_NOTIFICATION_COMMAND }}


