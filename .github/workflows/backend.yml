name: Backend build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  ASPNETCORE_ENVIRONMENT: Development
  
permissions:
  checks: write
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v4
    - name: Install Nixpacks
      run: curl -sSL https://nixpacks.com/install.sh | bash
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Copy development environment settings
      run: cp src/CloudCrafter.Web/appsettings.Development.example.json src/CloudCrafter.Web/appsettings.Development.json
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal --logger trx --results-directory ./test-results --collect:"XPlat Code Coverage;Format=opencover" /p:DefineConstants="IN_TESTS"
    
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          ./backend/test-results/**/*.trx
          
    # - name: Process trx reports with default
    #   if: always()
    #   # You may also reference just the major or major.minor version
    #   uses: im-open/process-dotnet-test-results@v3.0.0
    #   with:
    #     base-directory: ./backend/test-results
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     create-status-check: true
    #     create-pr-comment: true
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      if: always()
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}