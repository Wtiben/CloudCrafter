name: (Beta) Build and Push Docker Images

on:
  push:
    branches: [ "beta" ]
env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: "cloudcrafter-oss"

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image: [
          # { name: "agent", context: "./backend/", build_args: "", dockerfile: "./backend/src/CloudCrafter.Agent.Console/Dockerfile" },
          # { name: "backend", context: "./backend/", build_args: "",   dockerfile: "./backend/src/CloudCrafter.Web/Dockerfile" },
          # { name: "worker", context: "./backend/", build_args: "", dockerfile: "./backend/src/CloudCrafter.Worker.Console/Dockerfile" },
          { name: "frontend", context: "./frontend/", build_args: "CLOUDCRAFTER_AXIOS_BACKEND_BASEURL=http://dummy", dockerfile: "./frontend/apps/web/Dockerfile" }
        ]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/cloudcrafter-${{ matrix.image.name }}-amd64
          tags: |
            beta

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ matrix.image.build_args }}

  build-aarch64:
    runs-on: arm64
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image: [
          # { name: "agent", context: "./backend/", build_args: "", dockerfile: "./backend/src/CloudCrafter.Agent.Console/Dockerfile" },
          # { name: "backend", context: "./backend/", build_args: "",   dockerfile: "./backend/src/CloudCrafter.Web/Dockerfile" },
          # { name: "worker", context: "./backend/", build_args: "", dockerfile: "./backend/src/CloudCrafter.Worker.Console/Dockerfile" },
          { name: "frontend", context: "./frontend/", build_args: "CLOUDCRAFTER_AXIOS_BACKEND_BASEURL=http://dummy", dockerfile: "./frontend/apps/web/Dockerfile" }
        ]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/cloudcrafter-${{ matrix.image.name }}-aarch64
          tags: |
            beta

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ matrix.image.build_args }}

  merge-manifest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [build-amd64, build-aarch64]
    strategy:
      matrix:
        image: [
          # { name: "agent", context: "./backend/", build_args: "", dockerfile: "./backend/src/CloudCrafter.Agent.Console/Dockerfile" },
          # { name: "backend", context: "./backend/", build_args: "",   dockerfile: "./backend/src/CloudCrafter.Web/Dockerfile" },
          # { name: "worker", context: "./backend/", build_args: "", dockerfile: "./backend/src/CloudCrafter.Worker.Console/Dockerfile" },
          { name: "frontend", context: "./frontend/", build_args: "CLOUDCRAFTER_AXIOS_BACKEND_BASEURL=http://dummy", dockerfile: "./frontend/apps/web/Dockerfile" }
        ]
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create & publish manifest 
        run: |
          docker buildx imagetools create \
          --append ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/cloudcrafter-${{ matrix.image.name }}-aarch64:beta \
          --tag ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/cloudcrafter-${{ matrix.image.name }}-amd64:beta \
          --tag ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/cloudcrafter-${{ matrix.image.name }}:beta



